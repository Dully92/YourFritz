#! /bin/true
#######################################################################################################
#                                                                                                     #
# ATTENTION:                                                                                          #
# This script will not run as "command", include it with a dot (.) command into your script.          #
#                                                                                                     #
#######################################################################################################
# vim: set tabstop=4 syntax=sh : # colorize it in 'vi' and use shorter tabstops
# SPDX-License-Identifier: LicenseRef-limited-license-see-text-below
###################################################################################################VER#
#                                                                                                     #
# YourFritz Shell Script Library generator, version 0.8.3                                             #
#                                                                                                     #
# This script is part of the YourFritz project from https://github.com/PeterPawn/YourFritz.           #
#                                                                                                     #
###################################################################################################CPY#
#                                                                                                     #
# Copyright (C) 2016-2020 P. Haemmerlein (peterpawn@yourfritz.de)                                     #
#                                                                                                     #
###################################################################################################LIC#
#                                                                                                     #
# The YourFritz Shell Script Library functions are licensed according to the following terms:         #
#                                                                                                     #
# This project is free software, you can redistribute it and/or modify it under the terms of the GNU  #
# General Public License as published by the Free Software Foundation; either version 2 of the        #
# License, or (at your option) any later version.                                                     #
#                                                                                                     #
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without   #
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU      #
# General Public License under http://www.gnu.org/licenses/gpl-2.0.html for more details.             #
#                                                                                                     #
# If you're including library functions in your own script(s) permanently, to deliver only one single #
# file, you HAVE TO KEEP these functions together as one single continuous part in your script AND    #
# this section HAS TO BE prefixed by its own header, like it's created by this script AND the end of  #
# this section HAS TO BE marked clearly.                                                              #
#                                                                                                     #
# If you've changed anything to the content of library functions, these changes HAVE TO BE marked     #
# with the name of author AND the date of change AND a short explanation, what was changed (if it's   #
# not obvious).                                                                                       #
#                                                                                                     #
# In each case the copyright notice and licensing terms have to be kept as provided, but you may add  #
# your own copyright notice(s) and your own license conditions, as long as they're conforming to the  #
# rights granted by GPLv2 or later (with the exception above) and do not restrict or expand rights to #
# these parts of code, which are licensed under YourFritz conditions above.                           #
#                                                                                                     #
#######################################################################################################
#                                                                                                     #
# This library summarizes some often needed helper (shell) functions, which provide replacements of   #
# missing features in an environment, where only a POSIX compatible shell is available and the set of #
# available commands is limited to (mostly) POSIX compatible commands and options, too.               #
#                                                                                                     #
# Surely some functions may be implemented in a more effective manner ... but the purpose of this     #
# library is to provide a very basic implementation of such functions with as few dependencies as     #
# possible.                                                                                           #
#                                                                                                     #
# If nothing else is mentioned for a function, it's designed to run from any platform supporting      #
# BusyBox's 'ash' or even Debian's 'dash' shell and it should be possible to use these functions from #
# MIPS, ARMv6 (Puma6), ARMv7 (Raspberry Pi) and x86/x86_64 (Puma6/x86) platforms.                     #
#                                                                                                     #
# For a short description, how to include this library into your own scripts, visit the 'README.md'   #
# file from: https://github.com/PeterPawn/YourFritz/blob/master/scriptlib/README.md                   #
#                                                                                                     #
#######################################################################################################
YF_SCRIPTLIB_VERSION=0.8.3
#######################################################################################################
#                                                                                                     #
# internal helpers, used to solve dependencies and create an include file with the really needed      #
# functions                                                                                           #
#                                                                                                     #
#######################################################################################################
#                                                                                                     #
# Dependency markers are:                                                                             #
#                                                                                                     #
# U: - needed utilities, these commands MUST be present                                               #
# W: - weak utility dependencies, missing commands will be emulated (that's slow)                     #
# I: - other helper scripts to be included                                                            #
# F: - needed functions; used to build a dependency tree to include only the really                   #
#      needed function definitions                                                                    #
# K: - subset keywords for this file; it will be included, if one of them is present                  #
#      in the YF_SCRIPT_SUBSETS variable                                                              #
#                                                                                                     #
#######################################################################################################
__yf_helpers_exit()
(
	[ $SHLVL -le 3 ] && printf "return" || printf "exit"
)
__yf_helpers_join_lines()
(
	sed -e ':x;$!N;s/\n/ /;tx' | sed -e 's|[ ]\+| |g'
)
__yf_helpers_get_line()
(
	sed -n -e "s|^# ${2}: \(.*\)#\$|\1|p" "$1" | sed -e "/^-/d" | __yf_helpers_join_lines
)
__yf_helpers_contains()
(
	for w in $1; do
		[ "$w" = "$2" ] && return 0
	done
	return 1
)
__yf_helpers_string_compare()
(
	cmp "$1" "$2" 2>/dev/null 1>&2 && printf "0" && return 0
	res=$(cmp -l -- "$1" "$2" 2>/dev/null | \
			while read offset left right; do
				[ $left -lt $right ] && res=-1 || res=1
				printf "%d" $res
				break
			done)
	if [ -z $res ]; then
		l1=$(wc -c <"$1")
		l2=$(wc -c <"$2")
		[ $l1 -lt $l2 ] && res=-1 || res=1
	fi
	printf "%d" "$res"
	return 0
)
__yf_helpers_uniq_inline()
(
	last=""
	while read line; do
		[ "$last" = "$line" ] ||
		{
			printf "%s\n" "$line"
			last="$line"
		}
	done
)
__yf_helpers_uniqsort_inline()
(
	start=$(date +%s)
	i=0
	while read line; do
		i=$(( i + 1 ))
		eval fn_$i="$line"
	done
	f1="$1/left"
	f2="$1/right"
	# simple bubble sort with optimization attempts, but it is still only the
	# "last reSORT", if no other 'sort' command was found
	# it is really long lasting, because each string comparision is expensive
	j=$i
	while [ $j -gt 1 ]; do
		next=1
		k=0
		while [ $k -lt $(( j - 1 )) ]; do
			k=$(( k + 1 ))
			eval printf "%s" "\$fn_$k" >"$f1"
			eval printf "%s" "\$fn_$(( k + 1 ))" >"$f2"
			[ "$(__yf_helpers_string_compare "$f1" "$f2")" = "1" ] || continue
			eval fn_$k="$(cat "$f2")"
			eval fn_$(( k + 1 ))="$(cat "$f1")"
			next=$k
		done
		j=$next
	done
	rm "$f1" "$f2" 2>/dev/null
	j=0
	last=""
	while [ $j -lt $i ]; do
		j=$(( j + 1 ))
		line="$(eval printf "%s" "\$fn_$j")"
		[ "$last" = "$line" ] && continue
		printf "%s\n" "$line"
		last="$line"
	done
	__yf_helpers_message I "$(printf "inline sort duration=%d seconds for %d records\n" $(( $(date +%s) - start )) $i)"
)
__yf_helpers_uniq()
(
	cmd_sort=sort
	cmd_uniq=uniq
	if command -v $cmd_sort 2>/dev/null 1>&2; then
		test="$(printf "%s" $(printf "C\nA\nB\nA" | $cmd_sort -u 2>/dev/null))"
		#[ "$test" = "ABC" ] && $cmd_sort -u && return
		command -v $cmd_uniq 2>/dev/null 1>&2 && $cmd_sort | $cmd_uniq && return
		$cmd_sort | __yf_helpers_uniq_inline && return
	else
		__yf_helpers_message W "$(printf "no '%s' command found, using very slow inline sort version" "$(__yf_helpers_bold "$cmd_sort")")"
		__yf_helpers_uniqsort_inline "${TMPDIR:-/tmp}"
	fi
	return
)
__yf_helpers_unique()
(
	for f in $1; do
		printf "%s\n" $f
	done | \
	__yf_helpers_uniq | \
	__yf_helpers_join_lines
)
__yf_helpers_add_dependencies()
(
	deps="$1"
	for f in $deps; do
		dep="$(__yf_helpers_get_line "$f" F)"
		[ ${#dep} -eq 0 ] && continue
		for d in $dep; do
			fn="${__YF_SCRIPT_FUNCTIONS_DIR}/${d}.function"
			__yf_helpers_contains "$deps" "$fn" && continue
			deps="$deps $fn $(__yf_helpers_add_dependencies "$fn")"
		done
	done
	printf "%s" "$deps"
)
__yf_helpers_find_functions()
(
	if ! [ "${__YF_SCRIPT_FUNCTIONS}" = "-" ]; then
		[ "$YF_HELPERS_DEBUG" = "1" ] && __yf_helpers_message I "$(printf "include functions from YF_SCRIPT_FUNCTIONS only")"
		err=0
		for f in ${__YF_SCRIPT_FUNCTIONS}; do
			fn="$(printf "%s/%s.function" "${__YF_SCRIPT_FUNCTIONS_DIR}" "$f")"
			[ -f "$fn" ] && printf "%s\n" "$fn" || {
				__yf_helpers_message F "$(printf "Requested function '%s' was not found in library." "$(__yf_helpers_bold "$f")")"
				err=1
			}
		done
		[ $err -eq 1 ] && return 1
		return 0
	fi 
	[ "${__YF_SCRIPT_SUBSETS}" = "all" ] && {
		find "${__YF_SCRIPT_FUNCTIONS_DIR}/" -name "*.function" 
		[ "$YF_HELPERS_DEBUG" = "1" ] && __yf_helpers_message I "$(printf "include all functions")"
		return 0
	}
	[ "$YF_HELPERS_DEBUG" = "1" ] && __yf_helpers_message I "$(printf "include functions with keys from YF_SCRIPT_SUBSETS")"
	for f in $(find "${__YF_SCRIPT_FUNCTIONS_DIR}/" -name "*.function"); do
		for s in $(__yf_helpers_get_line "$f" K); do
			__yf_helpers_contains "${YF_SCRIPT_SUBSETS}" "$s" && printf "%s\n" "$f"	
		done
	done
	return 0
)
__yf_helpers_csi()
(
	[ "$YF_HELPERS_NO_COLOR" = "1" ] && return
	( [ -t 2 ] || [ "$YF_HELPERS_FORCE_COLOR" = "1" ] ) && printf "\033[%sm" "$1"
)
__yf_helpers_bold()
(
	printf "%s%s%s" "$(__yf_helpers_csi 1)" "$*" "$(__yf_helpers_csi 0)"
)
__yf_helpers_message()
(
	exec 1>&2
	s=$1
	shift
	( [ "$s" = "F" ] || [ "$s" = "E" ] ) && c=1
	[ "$s" = "W" ] && c=3
	[ "$s" = "I" ] && c=2
	printf "%s [%s%s] %s\n" "$(__yf_helpers_bold "YourFritz Shell Script Library:")" "$(__yf_helpers_csi "3$c")" "$(__yf_helpers_bold "$s")" "$*"
)
__yf_helpers_check_command()
(
	cmd=$1
	fail=${2:-1}
	command -v $cmd 2>/dev/null 1>&2 && return 0
	[ $fail -eq 1 ] &&
		__yf_helpers_message F "$(printf "Missing '%s' utility, it's absolutely necessary for the library." "$(__yf_helpers_bold "$cmd")")" ||
		__yf_helpers_message W "$(printf "Missing '%s' utility, it's needed by one or more imported functions." "$(__yf_helpers_bold "$cmd")")"
	return 1
)
#######################################################################################################
#                                                                                                     #
# check prerequisites                                                                                 #
#                                                                                                     #
#######################################################################################################
[ "$YF_HELPERS_DEBUG" = "1" ] && __yf_helpers_start=$(date +%s)
__YF_SCRIPT_DIR="${YF_SCRIPT_DIR:-.}"
__YF_SCRIPT_FUNCTIONS_DIR="$__YF_SCRIPT_DIR/functions"
__YF_SCRIPT_FUNCTIONS="${YF_SCRIPT_FUNCTIONS:--}"
__YF_SCRIPT_SUBSETS="${YF_SCRIPT_SUBSETS:-all}"
__yf_helpers_needed_commands="printf find sed expr cmp wc"
for __yf_temp in ${__yf_helpers_needed_commands}; do
	__yf_helpers_check_command "${__yf_temp}" || eval $(__yf_helpers_exit) 130
done
[ -d "${__YF_SCRIPT_FUNCTIONS_DIR}" ] || __yf_helpers_message F "$(printf "Missing helpers function directory '%s' - please set YF_SCRIPT_DIR to the appropriate path (the library base directory)." "$(__yf_helpers_bold "${__YF_SCRIPT_FUNCTIONS_DIR}")")"
#######################################################################################################
#                                                                                                     #
# check automatic function assembly                                                                   #
#                                                                                                     #
#######################################################################################################
[ "$YF_SCRIPT_SAVE" = "1" ] && [ -z "$YF_SCRIPT_GENERATE_FILE" ] && YF_SCRIPT_GENERATE_FILE="$0.yf_scriptlib"
#######################################################################################################
#                                                                                                     #
# include wanted functions                                                                            #
#                                                                                                     #
#######################################################################################################
if [ -z "${YF_SCRIPT_GENERATE_FILE}" ]; then
	[ "$YF_HELPERS_DEBUG" = "1" ] && __yf_helpers_message I "$(printf "include functions into the current shell instance with the dot (.) command\n")" 1>&2
else
	rm "$YF_SCRIPT_GENERATE_FILE" 2>/dev/null
	cat >>"$YF_SCRIPT_GENERATE_FILE" <<EOD
# YourFritz Shell Script Library Version: $YF_SCRIPTLIB_VERSION
# SPDX-License-Identifier: LicenseRef-limited-license-see-text-below
# Generated as: $YF_SCRIPT_GENERATE_FILE
# Generated at: $(date 2>/dev/null)
# Generated with: YF_SCRIPT_FUNCTIONS="$YF_SCRIPT_FUNCTIONS"
# Generated with: YF_SCRIPT_SUBSETS="$YF_SCRIPT_SUBSETS"
# Autoupdate: yes
# vim: set tabstop=4 syntax=sh :
#######################################################################################################
#                                                                                                     #
# YourFritz Shell Script Library file, version $YF_SCRIPTLIB_VERSION                                                  #
#                                                                                                     #
# The functions from this script are a part of the YourFritz Shell Script Library from YourFritz      #
# project at https://github.com/PeterPawn/YourFritz.                                                  #
#                                                                                                     #
###################################################################################################CPY#
#                                                                                                     #
# Copyright (C) 2016-2020 P.Haemmerlein (peterpawn@yourfritz.de)                                      #
#                                                                                                     #
###################################################################################################LIC#
#                                                                                                     #
# The YourFritz Shell Script Library functions are licensed according to the following terms:         #
#                                                                                                     #
# This project is free software, you can redistribute it and/or modify it under the terms of the GNU  #
# General Public License as published by the Free Software Foundation; either version 2 of the        #
# License, or (at your option) any later version.                                                     #
#                                                                                                     #
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without   #
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU      #
# General Public License under http://www.gnu.org/licenses/gpl-2.0.html for more details.             #
#                                                                                                     #
# If you're including library functions in your own script(s) permanently, to deliver only one single #
# file, you HAVE TO KEEP these functions together as one single continuous part in your script AND    #
# this section HAS TO BE prefixed by its own header, like it's created by yf_helpers script AND the   #
# end of this section HAS TO BE marked clearly.                                                       #
#                                                                                                     #
# If you've changed anything to the content of library functions, these changes HAVE TO BE marked     #
# with the name of author AND the date of change AND a short explanation, what was changed (if it's   #
# not obvious).                                                                                       #
#                                                                                                     #
# In each case the copyright notice and licensing terms have to be kept as provided, but you may add  #
# your own copyright notice(s) and your own license conditions, as long as they're conforming to the  #
# rights granted by GPLv2 or later (with the exception above) and do not restrict or expand rights to #
# these parts of code, which are licensed under YourFritz conditions above.                           #
#                                                                                                     #
#######################################################################################################
EOD
	[ "$YF_HELPERS_DEBUG" = "1" ] && __yf_helpers_message I "$(printf "output shell functions file to '%s'\n" "$YF_SCRIPT_GENERATE_FILE")" 1>&2
fi
__yf_functions="$(__yf_helpers_find_functions)"
[ $? -eq 0 ] || eval $(__yf_helpers_exit) 129
__yf_functions="$(__yf_helpers_unique "$(__yf_helpers_add_dependencies "${__yf_functions}")")"
unset __yf_commands
__yf_functions_count=0
for __yf_temp in ${__yf_functions}; do
	__yf_functions_count=$(( __yf_functions_count + 1 ))
	if ! [ -z "$YF_SCRIPT_GENERATE_FILE" ]; then
		sed -e "/^[ \t]*#/d" "${__yf_temp}" >>"$YF_SCRIPT_GENERATE_FILE"
	else
		. "${__yf_temp}"
	fi
	__yf_commands="${__yf_commands} $(__yf_helpers_get_line "${__yf_temp}" U)"
done
[ "$YF_HELPERS_DEBUG" = "1" ] && __yf_helpers_message I "$(printf "included %d functions\n" ${__yf_functions_count})" 1>&2
__yf_commands="$(__yf_helpers_unique "${__yf_commands}")"
__yf_commands_count=0
for __yf_temp in ${__yf_commands}; do
	__yf_commands_count=$(( __yf_commands_count + 1 ))
	__yf_helpers_contains "${__yf_helpers_needed_commands}" "${__yf_temp}" || __yf_helpers_check_command "${__yf_temp}" 0
done
[ "$YF_HELPERS_DEBUG" = "1" ] &&
	__yf_helpers_message I "$(printf "checked %d mandatory commands\n" ${__yf_commands_count})" 1>&2 &&
	__yf_helpers_message I "${__yf_commands}" 1>&2
[ -n "$YF_SCRIPT_GENERATE_FILE" ] && cat >>"$YF_SCRIPT_GENERATE_FILE" <<'EOD'
#######################################################################################################
#                                                                                                     #
# end of script library                                                                               #
#                                                                                                     #
##########################################################################################YF_SCRIPTLIB#
EOD
[ "$YF_SCRIPT_SAVE" = "1" ] && . "$YF_SCRIPT_GENERATE_FILE"
#######################################################################################################
#                                                                                                     #
# housekeeping, remove as much unnecessary variables and functions as possible                        #
#                                                                                                     #
#######################################################################################################
__yf_vars="SUBSETS FUNCTIONS FUNCTIONS_DIR DIR"
__yf_functions="check_command find_functions add_dependencies unique uniq uniqsort_inline uniq_inline string_compare contains get_line join_lines exit"
for __yf_temp in ${__yf_functions}; do
	unset -f __yf_helpers_${__yf_temp}
done
for __yf_temp in ${__yf_vars}; do
	unset -v __YF_SCRIPT_${__yf_temp}
done
unset -v __yf_commands
unset -v __yf_commands_count
unset -v __yf_functions
unset -v __yf_functions_count
unset -v __yf_vars
unset -v __yf_helpers_needed_commands
[ "$YF_HELPERS_DEBUG" = "1" ] && __yf_helpers_message I "$(printf "dependency processing duration=%d sec.\n" $(( $(date +%s) - __yf_helpers_start )))" 1>&2
unset -f __yf_helpers_bold
unset -f __yf_helpers_csi
unset -f __yf_helpers_message
unset -v __yf_helpers_start
unset -v __yf_temp
#######################################################################################################
#                                                                                                     #
# end of file                                                                                         #
#                                                                                                     #
#######################################################################################################
